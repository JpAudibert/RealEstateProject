// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RealEstateBackend.Infrastructure.EF;

#nullable disable

namespace RealEstateBackend.Migrations
{
    [DbContext(typeof(RealEstateContext))]
    partial class RealEstateContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RealEstateBackend.Infrastructure.Amenities.Models.Amenity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("Now()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("Now()");

                    b.HasKey("Id");

                    b.ToTable("amenities", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("06d314b9-bfd6-432e-acff-7612b6d39239"),
                            Name = "Piscina"
                        },
                        new
                        {
                            Id = new Guid("e2815177-8b18-467c-9e18-846ecf2392be"),
                            Name = "Churrasqueira"
                        },
                        new
                        {
                            Id = new Guid("b4450201-4178-4d52-9700-ef6c8bedfa69"),
                            Name = "Microondas"
                        },
                        new
                        {
                            Id = new Guid("279cecc6-b1d6-4a0d-85db-54433349531d"),
                            Name = "Mobília"
                        },
                        new
                        {
                            Id = new Guid("05fa4826-98c9-46ab-9604-35afedb2f870"),
                            Name = "Jardim"
                        });
                });

            modelBuilder.Entity("RealEstateBackend.Infrastructure.RealEstateKinds.Models.RealEstateKind", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("Now()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("Now()");

                    b.HasKey("Id");

                    b.ToTable("realestatekinds", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a75a26e9-38ee-4224-a0f7-27c356e2edd1"),
                            Name = "Terreno"
                        },
                        new
                        {
                            Id = new Guid("c57037f9-a3b3-4985-86cf-bf1022e9847e"),
                            Name = "Casa"
                        },
                        new
                        {
                            Id = new Guid("edf1b3d3-6299-4676-8a8b-90683d0fe9e7"),
                            Name = "Apartamento"
                        },
                        new
                        {
                            Id = new Guid("2e45f39b-d770-4106-bd61-b9d20cbe2b9f"),
                            Name = "Área Rural"
                        },
                        new
                        {
                            Id = new Guid("de7cd9fa-030a-4086-bad8-c7fc95478bf2"),
                            Name = "Sala Comercial"
                        });
                });

            modelBuilder.Entity("RealEstateBackend.Infrastructure.RealEstates.Models.RealEstate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(70)");

                    b.Property<string>("ComercialType")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("Now()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<double>("PrivateSquareFoot")
                        .HasColumnType("double precision");

                    b.Property<Guid>("RealEstateKindId")
                        .HasColumnType("uuid");

                    b.Property<double>("RentValue")
                        .HasColumnType("double precision");

                    b.Property<double>("SellValue")
                        .HasColumnType("double precision");

                    b.Property<double>("SquareFoot")
                        .HasColumnType("double precision");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("Now()");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("RealEstateKindId");

                    b.ToTable("realestates", (string)null);
                });

            modelBuilder.Entity("RealEstateBackend.Infrastructure.RealEstates.Models.RealEstate", b =>
                {
                    b.HasOne("RealEstateBackend.Infrastructure.RealEstateKinds.Models.RealEstateKind", "RealEstateKind")
                        .WithMany("RealEstates")
                        .HasForeignKey("RealEstateKindId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RealEstateKind");
                });

            modelBuilder.Entity("RealEstateBackend.Infrastructure.RealEstateKinds.Models.RealEstateKind", b =>
                {
                    b.Navigation("RealEstates");
                });
#pragma warning restore 612, 618
        }
    }
}
